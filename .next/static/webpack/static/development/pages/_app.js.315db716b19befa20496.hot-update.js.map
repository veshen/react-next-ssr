{"version":3,"file":"static/webpack/static/development/pages/_app.js.315db716b19befa20496.hot-update.js","sources":["webpack:///./saga.js"],"sourcesContent":["/* global fetch */\n\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport { actionTypes, failure, loadDataSuccess, tickClock } from './actions'\n\nes6promise.polyfill()\n\nfunction * runClockSaga () {\n  yield take(actionTypes.START_CLOCK)\n  while (true) {\n    yield put(tickClock(false))\n    yield delay(1000)\n  }\n}\n\nfunction * loadDataSaga () {\n  try {\n    const res = yield fetch('http://qa-admin.hxihuyu.com/bbs/bbsposts/getPostsListByIsHandpick?size=20&current=1&isHandpick=1')\n    const data = yield res.json()\n    console.log(data);\n    yield put(loadDataSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * rootSaga () {\n  yield all([\n    call(runClockSaga),\n    takeLatest(actionTypes.LOAD_DATA, loadDataSaga)\n  ])\n}\n\nexport default rootSaga\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAUA;;;AAQA;;;AAWA;AACA;AA9BA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAIA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AAJA;AAGA;AACA;AAJA;AAKA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;A","sourceRoot":""}