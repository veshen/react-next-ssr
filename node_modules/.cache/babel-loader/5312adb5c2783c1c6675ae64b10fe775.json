{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wangwei/Documents/ssr-project/react-next-ssr/pages/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadData, startClock, tickClock } from '../actions';\nimport Page from '../components/page';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(startClock());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Page, {\n        title: \"Index Page123123\",\n        linkTo: \"/other\",\n        NavigateTo: \"Other Page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var _props$ctx, store, isServer;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _props$ctx = props.ctx, store = _props$ctx.store, isServer = _props$ctx.isServer;\n                store.dispatch(tickClock(isServer));\n\n                if (!store.getState().placeholderData) {\n                  store.dispatch(loadData());\n                }\n\n                return _context.abrupt(\"return\", {\n                  isServer: isServer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default connect()(Index);","map":{"version":3,"sources":["/Users/wangwei/Documents/ssr-project/react-next-ssr/pages/index.js"],"names":["React","connect","loadData","startClock","tickClock","Page","Index","props","dispatch","ctx","store","isServer","getState","placeholderData","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,YAAhD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,K;;;;;;;;;;;;;wCAYiB;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoBL,UAAU,EAA9B;AACD;;;6BAES;AACR,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,kBAAZ;AAA+B,QAAA,MAAM,EAAC,QAAtC;AAA+C,QAAA,UAAU,EAAC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;;;gDAjB6BI,K;;;;;;;6BACAA,KAAK,CAACE,G,EAA1BC,K,cAAAA,K,EAAOC,Q,cAAAA,Q;AACfD,gBAAAA,KAAK,CAACF,QAAN,CAAeJ,SAAS,CAACO,QAAD,CAAxB;;AAEA,oBAAI,CAACD,KAAK,CAACE,QAAN,GAAiBC,eAAtB,EAAuC;AACrCH,kBAAAA,KAAK,CAACF,QAAN,CAAeN,QAAQ,EAAvB;AACD;;iDAEM;AAAES,kBAAAA,QAAQ,EAARA;AAAF,iB;;;;;;;;;;;;;;;;;;;EATSX,KAAK,CAACc,S;;AAqB1B,eAAeb,OAAO,GAAGK,KAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loadData, startClock, tickClock } from '../actions'\nimport Page from '../components/page'\n\nclass Index extends React.Component {\n  static async getInitialProps (props) {\n    const { store, isServer } = props.ctx\n    store.dispatch(tickClock(isServer))\n\n    if (!store.getState().placeholderData) {\n      store.dispatch(loadData())\n    }\n\n    return { isServer }\n  }\n\n  componentDidMount () {\n    this.props.dispatch(startClock())\n  }\n\n  render () {\n    return <Page title='Index Page123123' linkTo='/other' NavigateTo='Other Page' />\n  }\n}\n\nexport default connect()(Index)\n"]},"metadata":{},"sourceType":"module"}