{"version":3,"sources":["../src/index.js"],"names":["_Promise","Promise","_debug","DEFAULT_KEY","isServer","window","setPromise","initStore","makeStore","initialState","config","ctx","storeKey","createStore","deserializeState","debug","serializeState","state","App","props","context","store","hasStore","console","log","initialProps","Component","displayName","name","appCtx","Error","getState","getInitialProps","call"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nlet _Promise = Promise;\nlet _debug = false;\nconst DEFAULT_KEY = '__NEXT_REDUX_STORE__';\nconst isServer = typeof window === 'undefined';\n\nexport const setPromise = Promise => _Promise = Promise;\n\n/**\n * @param makeStore\n * @param initialState\n * @param config\n * @param ctx\n * @return {{getState: function, dispatch: function}}\n */\nconst initStore = ({makeStore, initialState, config, ctx = {}}) => {\n\n    const {storeKey} = config;\n\n    const createStore = () => makeStore(\n        config.deserializeState(initialState),\n        {\n            ...ctx,\n            ...config,\n            isServer\n        }\n    );\n\n    if (isServer) return createStore();\n\n    // Memoize store if client\n    if (!window[storeKey]) {\n        window[storeKey] = createStore();\n    }\n\n    return window[storeKey];\n\n};\n\n/**\n * @param makeStore\n * @param config\n * @return {function(App): {getInitialProps, new(): WrappedApp, prototype: WrappedApp}}\n */\nexport default (makeStore, config = {}) => {\n\n    config = {\n        storeKey: DEFAULT_KEY,\n        debug: _debug,\n        serializeState: state => state,\n        deserializeState: state => state,\n        ...config\n    };\n\n    return (App) => (class WrappedApp extends Component {\n\n        static displayName = `withRedux(${App.displayName || App.name || 'App'})`;\n\n        static getInitialProps = async (appCtx) => {\n\n            if (!appCtx) throw new Error('No app context');\n            if (!appCtx.ctx) throw new Error('No page context');\n\n            const store = initStore({\n                makeStore,\n                config,\n                ctx: appCtx.ctx\n            });\n\n            if (config.debug) console.log('1. WrappedApp.getInitialProps wrapper got the store with state', store.getState());\n\n            appCtx.ctx.store = store;\n            appCtx.ctx.isServer = isServer;\n\n            let initialProps = {};\n\n            if ('getInitialProps' in App) {\n                initialProps = await App.getInitialProps.call(App, appCtx);\n            }\n\n            if (config.debug) console.log('3. WrappedApp.getInitialProps has store state', store.getState());\n\n            return {\n                store,\n                isServer,\n                initialState: config.serializeState(store.getState()),\n                initialProps: initialProps\n            };\n\n        };\n\n        constructor(props, context) {\n\n            super(props, context);\n\n            let {initialState, store} = props;\n\n            const hasStore = store && ('dispatch' in store) && ('getState' in store);\n\n            //TODO Always recreate the store even if it could be reused? @see https://github.com/zeit/next.js/pull/4295#pullrequestreview-118516366\n            store = hasStore ? store : initStore({\n                makeStore,\n                initialState,\n                config\n            });\n\n            if (config.debug) console.log('4. WrappedApp.render', (hasStore ? 'picked up existing one,' : 'created new store with'), 'initialState', initialState);\n\n            this.store = store;\n\n        }\n\n        render() {\n\n            let {initialProps, initialState, store, ...props} = this.props;\n\n            // Cmp render must return something like <Provider><Component/></Provider>\n            return (\n                <App {...props} {...initialProps} store={this.store}/>\n            );\n\n        }\n\n    });\n\n};"],"file":"index.js"}